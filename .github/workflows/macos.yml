name: MacOS-CI

# https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#filter-pattern-cheat-sheet
on:
  push:
    branches: 
      - master
    tags:
      - '*'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: macos-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # https://github.community/t5/GitHub-Actions/How-to-get-just-the-tag-name/td-p/31595/page/2
      - name: Branch name
        id: branch_name
        run: |
          echo ::set-output name=SOURCE_NAME::${GITHUB_REF#refs/*/}
          echo ::set-output name=SOURCE_BRANCH::${GITHUB_REF#refs/heads/}
          echo ::set-output name=SOURCE_TAG::${GITHUB_REF#refs/tags/}

      # https://github.com/marketplace/actions/flutter-action
      - uses: actions/setup-java@v1
        with:
          java-version: "8.x"
      - uses: subosito/flutter-action@v1
        with:
          channel: "dev" # optional, default to: 'stable'

      - run: flutter channel master
      - run: flutter upgrade
      - run: flutter config --enable-macos-desktop
      - run: flutter pub get
      - run: flutter build macos
      - run: flutter build apk
      # No valid code signing certificates were found
      # You can connect to your Apple Developer account by signing in with your Apple ID
      # in Xcode and create an iOS Development Certificate as well as a Provisioning 
      # Profile for your project by:
      #   1- Open the Flutter project's Xcode target with
      #        open ios/Runner.xcworkspace
      #   2- Select the 'Runner' project in the navigator then the 'Runner' target
      #      in the project settings
      #   3- Make sure a 'Development Team' is selected. 
      #      - For Xcode 10, look under General > Signing > Team.
      #      - For Xcode 11 and newer, look under Signing & Capabilities > Team.
      #      You may need to:
      #          - Log in with your Apple ID in Xcode first
      #          - Ensure you have a valid unique Bundle ID
      #          - Register your device with your Apple Developer Account
      #          - Let Xcode automatically provision a profile for your app
      #   4- Build or run your project again
      #   5- Trust your newly created Development Certificate on your iOS device
      #      via Settings > General > Device Management > [your new certificate] > Trust
      # - run: flutter build ios
      - run: npm install tree-node-cli -g
      - run: treee build
      - run: zip wayfless-macos-${{ steps.branch_name.outputs.SOURCE_TAG }}.zip -r build/macos/Build/Products/Release/wayfless_generator_flutter.app
      - run: cp build/app/outputs/apk/release/app-release.apk wayfless-android-${{ steps.branch_name.outputs.SOURCE_TAG }}.apk

      # https://github.com/xresloader/upload-to-github-release
      - uses: xresloader/upload-to-github-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file: wayfless-macos-${{ steps.branch_name.outputs.SOURCE_TAG }}.zip;wayfless-android-${{ steps.branch_name.outputs.SOURCE_TAG }}.apk
          tags: true
          draft: false
          update_latest_release: true
